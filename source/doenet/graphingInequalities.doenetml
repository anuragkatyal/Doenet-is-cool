<!-- **********************************************************************

Course:    Intermediate Algebra/Algebra I
Chapter:   Linear Inequalities
Section:   Graphing Solutions to Linear Inequalities in Two Variables
Author:    Anurag Katyal, Spring 2025
Contact:   anurag@whyoverhow.com


About the activity: 

********************************************************************** -->

<setup>
  <styleDefinitions>
    <styleDefinition styleNumber="8" lineStyle="dashed" lineWidth="5"/>
    <styleDefinition styleNumber="9" fillColor="green" lineColor="green" markerColor="green" lineWidth="3"/>
    <styleDefinition styleNumber="11" fillColor="green" lineColor="green" lineStyle="dashed" markerColor="green" lineWidth="3"/>
    <styleDefinition styleNumber="10" fillColor="blue" fillOpacity="0.1" lineColor="blue" lineWidth="0"/>
    <styleDefinition styleNumber="12" fillColor="white" fillOpacity="0" lineWidth="0"/>
    <styleDefinition styleNumber="13" fillColor="blue" fillOpacity="0.3" lineWidth="0"/>
  </styleDefinitions>

  <updateValue triggerWhenObjectsClicked="truckPolyTop" target="truckPolyTop.styleNumber" newValue="$topColor"/>
  <math name="topColor">
  <conditionalContent>
    <case condition="$truckPolyTop.styleNumber=13">12</case>
    <case condition="$truckPolyTop.styleNumber=12">13</case>
  </conditionalContent>
  </math>

  <updateValue triggerWhenObjectsClicked="truckPolyBottom" target="truckPolyBottom.styleNumber" newValue="$bottomColor"/>
  <math name="bottomColor">
  <conditionalContent>
    <case condition="$truckPolyBottom.styleNumber=13">12</case>
    <case condition="$truckPolyBottom.styleNumber=12">13</case>
  </conditionalContent>
  </math>
  
  <math name="dimmax1" simplify>2*<max><math simplify>$burrito*$multiplier1</math> <math simplify>$taco*$multiplier1</math></max></math>
  <math name="dimmax2" simplify>2*<max><math simplify>$bikeArea*$multiplier2</math> <math simplify>$scooterArea*$multiplier2</math></max></math>
  <math name="dimmin1" simplify>-1*$dimmax1</math>
  <math name="dimmin2" simplify>-1*$dimmax2</math>

  <selectFromSequence name="taco" from="2" to="4"></selectFromSequence>
  <selectFromSequence name="burrito" from="5" to="7"></selectFromSequence>
  <selectFromSequence name="multiplier1" from="4" to="8"></selectFromSequence>
  <selectFromSequence assignNames="tacosSold burritosSold" from="33" to="45" numToSelect="2"></selectFromSequence>
  <selectFromSequence assignNames="bikeStored scooterStored" from="1" to="5" numToSelect="2"></selectFromSequence>
  <math name="truckCost" simplify>$taco*$burrito*$multiplier1</math>
  <selectFromSequence name="bikeArea" from="4" to="6"></selectFromSequence>  
  <selectFromSequence name="scooterArea" from="2" to="4"></selectFromSequence>  
  <selectFromSequence name="multiplier2" from="4" to="8"></selectFromSequence>
  <math name="garageArea" simplify>$bikeArea*$scooterArea*$multiplier2</math>
  
  <graph>
    <function name="polyLine" through="$truckPt1 $truckPt2"></function>
    <point name="truckPoly1">($truckPt1.x-2000, $$polyLine($truckPt1.x-2000))</point>
    <point name="truckPoly2">($truckPt2.x+2000, $$polyLine($truckPt2.x+2000))</point>
    <polygon name="truckPolyTop" filled vertices="$truckPoly1 $truckPoly2 (0,2000)" styleNumber="12"></polygon>
    <polygon name="truckPolyBottom" filled vertices="$truckPoly1 $truckPoly2 (0,-2000)" styleNumber="12"></polygon>
    <point name="truckPoly3">(0,
      <conditionalContent>
        <case condition="$truckSol.y>=$$polyLine($truckSol.x)">2000</case>
        <case condition="$truckSol.y<=$$polyLine($truckSol.x)">-2000</case>
      </conditionalContent>)
    </point>
    <function name="polyLine2" through="$garagePt1 $garagePt2"></function>
    <point name="garagePoly1">($garagePt1.x-2000, $$polyLine2($garagePt1.x-2000))</point>
    <point name="garagePoly2">($garagePt2.x+2000, $$polyLine2($garagePt2.x+2000))</point>
    <point name="garagePoly3">(0,
      <conditionalContent>
        <case condition="$garageSol.y>=$$polyLine2($garageSol.x)">2000</case>
        <case condition="$garageSol.y<=$$polyLine2($garageSol.x)">-2000</case>
      </conditionalContent>)
    </point>
    <point name="tempPt1">$studentGaragePt1</point>
    <point name="tempPt2">$studentGaragePt2</point>
  </graph>
  
  <function name="truckEq">(-$taco x+$truckCost)/$burrito</function>
  <function name="garageEq">(-$bikeArea x + $garageArea)/$scooterArea</function>
  

  
</setup>

<title>Graphing Solutions to Linear Inequalities in Two Variables</title>

<p><em>This activity will reveal content as you work through it.</em></p>


<section boxed><title>Food Truck Fiesta</title>

<image source="https://i.imgur.com/OFPWDvQ.png" width="100%"></image>

  <p>Image generated by <ref uri="https://sora.chatgpt.com">Sora.</ref></p>
  
  <p>You operate a food truck selling tacos for <m>$ $taco</m> each and burritos for <m>$ $burrito</m> each. To cover your daily operating costs, you must make at least <m>$ $truckCost</m> each day.</p>

  <ol>
    <li><p>What variable would you like to use for the number of tacos sold? <mathInput name="numOfTacos"></mathInput></p></li>
    <li><p>What variable would you like to use for the number of burritos sold? <mathInput name="numOfBurritos"></mathInput></p></li>
    
    <li><p>Write an inequality representing the possible combinations of tacos and burritos you must sell daily to meet or exceed your costs. Be sure to use $numOfTacos for the number of tacos and $numOfBurritos for the number of burritos in your inequality. <answer name="truckIneq">$taco $numOfTacos + $burrito $numOfBurritos >= $truckCost</answer></p></li>
    <li><p>Graph the solutions to $truckIneq with $numOfTacos on the horizontal axis and $numOfBurritos on the vertical axis by plotting the intercepts.</p>
      <p>What is the $numOfTacos-intercept? Write your answer as a point. <answer name="xint">(<math simplify>$burrito*$multiplier1</math>,0)</answer></p>
      <p>What is the $numOfBurritos-intercept? Write your answer as a point. <answer name="yint">(0,<math simplify>$taco*$multiplier1</math>)</answer></p>
      <p>Select the type of line you'd like to draw:
        <booleanInput name="solidTruck" prefill="false"><label>Solid line</label></booleanInput>
        <booleanInput name="dashedTruck"  prefill="false"><label>Dashed line</label></booleanInput>
      </p>
      <updateValue triggerWhen="$solidTruck = true" target="dashedTruck" newValue="false" type="boolean"/>
      <updateValue triggerWhen="$dashedTruck = true" target="solidTruck" newValue="false" type="boolean"/>
      <p>Graph the line by dragging the dots to the intercepts.</p>
      <graph displayXAxisTickLabels="false" displayYAxisTickLabels="false">
        <xlabel>$numOfTacos</xlabel>
        <ylabel>$numOfBurritos</ylabel>
        <point showCoordsWhenDragging="false" fixed="truckGraph.creditAchieved=1" name="truckPt1">(-5,5)
          <label>$numOfBurritos-int, ($truckPt1.x, $truckPt1.y)</label>
          <constraints>
            <constrainToGrid/>
          </constraints>
        </point>
        <point showCoordsWhenDragging="false" fixed="truckGraph.creditAchieved=1" name="truckPt2">(5,5)
          <label>$numOfTacos-int, ($truckPt2.x, $truckPt2.y)</label>
          <constraints>
            <constrainToGrid/>
          </constraints>
        </point>
<!--         <point showCoordsWhenDragging="false" fixed="truckGraph.creditAchieved=1" name="truckSol" styleNumber="3" hide="$truckGraph.creditAchieved=1">(3,-6)
          <label>Drag to the region containing solutions.</label>
          <constraints>
            <constrainToGrid/>
          </constraints>
        </point> -->
<!--         <polygon fixed="true" name="truckPoly" filled vertices="$truckPoly1 $truckPoly2 $truckPoly3" styleNumber="10"></polygon> -->
        $truckPolyTop
        $truckPolyBottom
        <line fixed="truckGraph.creditAchieved=1" name="truckLine1" hide="not $solidTruck" through="$truckPt1 $truckPt2"></line>
        <line fixed="truckGraph.creditAchieved=1" name="truckLine2" hide="not $dashedTruck" through="$truckPt1 $truckPt2" styleNumber="8"></line>
      </graph>
      <answer name="truckGraph"><award><when>
        $xint=$truckPt2 and $yint=$truckPt1 and $solidTruck=true and $dashedTruck=false and $truckPolyTop.styleNumber=13 and $truckPolyBottom.styleNumber=12
      </when></award></answer>
      <updateValue triggerWhen="$truckGraph.creditAchieved=1" target="truckLine1.styleNumber" newValue="9"></updateValue>
      <updateValue triggerWhen="$truckGraph.creditAchieved=1" target="truckPt1.styleNumber" newValue="9"></updateValue>
      <updateValue triggerWhen="$truckGraph.creditAchieved=1" target="truckPt2.styleNumber" newValue="9"></updateValue>
      <updateValue triggerWhen="$truckGraph.creditAchieved=1" target="truckPolyTop.styleNumber" newValue="9"></updateValue>
    </li>
<boolean>$truckPolyTop.styleNumber=13</boolean>, <boolean>$truckPolyBottom.styleNumber=12</boolean>
    <li hide="$truckGraph.creditAchieved=0"><p>Plot the point that represents <m>$burritosSold</m> burritos and <m>$tacosSold</m> tacos sold.</p>
      <graph xmax="$dimmax1" ymax="$dimmax1" xmin="$dimmin1" ymin="$dimmin1">
<!--       <graph> -->
        <xlabel>$numOfTacos</xlabel>
        <ylabel>$numOfBurritos</ylabel>
        $truckLine1
        $truckLine2
        $truckPoly
        <point name="truckTestSol" showCoordsWhenDragging="false">(0,0)
          <label>($truckTestSol.x, $truckTestSol.y)</label>
          <constraints>
            <constrainToGrid/>
          </constraints>
        </point>
      </graph>
      <answer name="chosenPoint"><award><when>
      </when></award></answer>
    </li>
    <li hide="$chosenPoint.creditAchieved=0"><p>Based on the graph above, will selling <m>$burritosSold</m> burritos and <m>$tacosSold</m> tacos make at least <m>$ $truckCost</m>?</p>
      <answer name="pointInRegion" shuffleOrder>
        <choice credit="1">The point <em>is</em> in the region containing solutions, and therefore selling <m>$burritosSold</m> burritos and <m>$tacosSold</m> tacos <em>will</em> make at least <m>$ $truckCost</m></choice>
        <choice>The point <em>is not</em> in the region containing solutions, and therefore selling <m>$burritosSold</m> burritos and <m>$tacosSold</m> tacos <em>will</em> make at least <m>$ $truckCost</m></choice>
        <choice>The point <em>is</em> in the region containing solutions, and therefore selling <m>$burritosSold</m> burritos and <m>$tacosSold</m> tacos <em>will not</em> make at least <m>$ $truckCost</m></choice>
        <choice>The point <em>is not</em> in the region containing solutions, and therefore selling <m>$burritosSold</m> burritos and <m>$tacosSold</m> tacos <em>will not</em> make at least <m>$ $truckCost</m></choice>
      </answer>
    </li>
      
    <li hide="$pointInRegion.creditAchieved=0"><p>Plot a point corresponding to the number of tacos and burritos sold that <em>would not</em> make at least <m>$ $truckCost</m>.</p>
      <graph xmax="$dimmax1" ymax="$dimmax1" xmin="$dimmin1" ymin="$dimmin1">
<!--       <graph hide="$truckGraph.creditAchieved=0" xmax="$dimmax1" ymax="$dimmax1" xmin="$dimmin1" ymin="$dimmin1"> -->
        <xlabel>$numOfTacos</xlabel>
        <ylabel>$numOfBurritos</ylabel>
        $truckLine1
        $truckLine2
        $truckPoly
        <point name="truckTestNotSol" showCoordsWhenDragging="false">(-5,-5)
          <label>($truckTestNotSol.x, $truckTestNotSol.y)</label>
          <constraints>
            <constrainToGrid/>
          </constraints>
        </point>
      </graph>
      <answer name="studentNoSol"><award><when>
        $truckTestNotSol.x > 0 and $truckTestNotSol.y > 0 and $truckTestNotSol.y < $$truckEq($truckTestNotSol.x)
      </when></award></answer>
      <feedback condition="$studentNoSol.responseHasBeenSubmitted=true and $truckTestNotSol.x < 0 and $truckTestNotSol.y < 0">Can you sell negative tacos or burritos?</feedback>
      <feedback condition="$studentNoSol.responseHasBeenSubmitted=true and $truckTestNotSol.x < 0 and $truckTestNotSol.y > 0">Can you sell negative tacos?</feedback>
      <feedback condition="$studentNoSol.responseHasBeenSubmitted=true and $truckTestNotSol.y < 0 and $truckTestNotSol.x > 0">Can you sell negative burritos?</feedback>
    </li>

    <li hide="$studentNoSol.creditAchieved=0"><p>Based on the graph above, will selling <m>$truckTestNotSol.y</m> burritos and <m>$truckTestNotSol.x</m> tacos make at least <m>$ $truckCost</m>?</p>
      <answer name="pointNotInRegion" shuffleOrder>
        <choice>The point <em>is</em> in the region containing solutions, and therefore selling <m>$truckTestNotSol.y</m> burritos and <m>$truckTestNotSol.x</m> tacos <em>will</em> make at least <m>$ $truckCost</m></choice>
        <choice>The point <em>is not</em> in the region containing solutions, and therefore selling <m>$truckTestNotSol.y</m> burritos and <m>$truckTestNotSol.x</m> tacos <em>will</em> make at least <m>$ $truckCost</m></choice>
        <choice>The point <em>is</em> in the region containing solutions, and therefore selling <m>$truckTestNotSol.y</m> burritos and <m>$truckTestNotSol.x</m> tacos <em>will not</em> make at least <m>$ $truckCost</m></choice>
        <choice credit="1">The point <em>is not</em> in the region containing solutions, and therefore selling <m>$truckTestNotSol.y</m> burritos and <m>$truckTestNotSol.x</m> tacos <em>will not</em> make at least <m>$ $truckCost</m></choice>
      </answer>
    </li>
  </ol>
  
</section>


<section boxed><title>Storage Squeeze</title>
<image source="https://i.imgur.com/2EvKM4p.png" width="100%"></image>

  <p>Image generated by <ref uri="https://sora.chatgpt.com">Sora.</ref></p>

  <p>A garage is used to store bicycles and scooters. Each bicycle takes up <m>$bikeArea</m> square feet, and each scooter takes up <m>$scooterArea</m> square feet. While the garage is much larger, less than <m>$garageArea</m> square feet can be used to store bicycles and scooters.</p>

  <ol>
    <li><p>What variable would you like to use for the number of bikes stored? <mathInput name="numOfBikes"></mathInput></p></li>
    <li><p>What variable would you like to use for the number of scooters stored? <mathInput name="numOfScooters"></mathInput></p></li>
    <li><p>Write an inequality representing the possible combinations of bikes and scooters you can store in the garage in less than $garageArea square feet. Be sure to use $numOfBikes for the number of bikes and $numOfScooters for the number of scooters in your inequality. <answer name="garageIneq">$bikeArea $numOfBikes + $scooterArea $numOfScooters < $garageArea</answer></p></li>
    <li><p>Graph the solutions to $garageIneq with $numOfBikes on the horizontal axis and $numOfScooters on the vertical axis by plotting any two points <em>besides</em> the $numOfBikes-intercept and the $numOfScooters-intercept.</p>
      <p>What is the first point you'd like to plot? <mathInput name="studentGaragePt1"></mathInput><answer><award><when>$tempPt1.y=$$garageEq($tempPt1.x) and $tempPt1.x!=0 and $tempPt1.y!=0</when></award></answer></p>
      <feedback condition="$garageIneq.creditAchieved=1 and $tempPt1.x=0">Be sure to find points <em>besides</em> the $numOfScooters-intercept.</feedback>
      <feedback condition="$garageIneq.creditAchieved=1 and $tempPt1.y=0">Be sure to find points <em>besides</em> the $numOfBikes-intercept.</feedback>
      <p>What is the second point you'd like to plot? <mathInput name="studentGaragePt2"></mathInput><answer><award><when>$tempPt2.y=$$garageEq($tempPt2.x) and $studentGaragePt1!=$studentGaragePt2 and $tempPt2.x!=0 and $tempPt2.y!=0</when></award></answer></p>
      <feedback condition="$garageIneq.creditAchieved=1 and $tempPt2.x=0 ">Be sure to find points <em>besides</em> the $numOfScooters-intercept.</feedback>
      <feedback condition="$garageIneq.creditAchieved=1 and $tempPt2.y=0">Be sure to find points <em>besides</em> the $numOfBikes-intercept.</feedback>
      <p>Select the type of line you'd like to draw:
        <booleanInput name="solidGarage" prefill="false"><label>Solid line</label></booleanInput>
        <booleanInput name="dashedGarage"  prefill="false"><label>Dashed line</label></booleanInput>
      </p>
      <updateValue triggerWhen="$solidGarage = true" target="dashedGarage" newValue="false" type="boolean"/>
      <updateValue triggerWhen="$dashedGarage = true" target="solidGarage" newValue="false" type="boolean"/>
      <p>Graph the line by dragging the dots to the first and second points listed above.</p>
      <graph displayXAxisTickLabels="false" displayYAxisTickLabels="false">
        <xlabel>$numOfBikes</xlabel>
        <ylabel>$numOfScooters</ylabel>
        <point showCoordsWhenDragging="false" fixed="garageGraph.creditAchieved=1" name="garagePt1">(-5,5)
          <label>first pt, ($garagePt1.x, $garagePt1.y)</label>
          <constraints>
            <constrainToGrid/>
          </constraints>
        </point>
        <point showCoordsWhenDragging="false" fixed="garageGraph.creditAchieved=1" name="garagePt2">(5,5)
          <label>second pt, ($garagePt2.x, $garagePt2.y)</label>
          <constraints>
            <constrainToGrid/>
          </constraints>
        </point>
        <point showCoordsWhenDragging="false" fixed="garageGraph.creditAchieved=1" name="garageSol" styleNumber="3" hide="$garageGraph.creditAchieved=1">(3,-6)
          <label>Drag to the region containing solutions.</label>
          <constraints>
            <constrainToGrid/>
          </constraints>
        </point>
        <polygon fixed="true" name="garagePoly" filled vertices="$garagePoly1 $garagePoly2 $garagePoly3" styleNumber="10"></polygon>
        <line fixed="garageGraph.creditAchieved=1" name="garageLine1" hide="not $solidGarage" through="$garagePt1 $garagePt2"></line>
        <line fixed="garageGraph.creditAchieved=1" name="garageLine2" hide="not $dashedGarage" through="$garagePt1 $garagePt2" styleNumber="8"></line>
      </graph>
      <answer name="garageGraph"><award><when>
        $garagePt1=$studentGaragePt1 and $garagePt2=$studentGaragePt2 and $solidGarage=false and $dashedGarage=true and $garageSol.y < $$garageEq($garageSol.x)
      </when></award></answer>
      <updateValue triggerWhen="$garageGraph.creditAchieved=1" target="garageLine2.styleNumber" newValue="11"></updateValue>
      <updateValue triggerWhen="$garageGraph.creditAchieved=1" target="garagePt1.styleNumber" newValue="11"></updateValue>
      <updateValue triggerWhen="$garageGraph.creditAchieved=1" target="garagePt2.styleNumber" newValue="11"></updateValue>
      <updateValue triggerWhen="$garageGraph.creditAchieved=1" target="garagePoly.styleNumber" newValue="11"></updateValue>
    </li>
    <li hide="$garageGraph.creditAchieved=0"><p>Plot the point that represents <m>$bikeStored</m> bikes and <m>$scooterStored</m> scooters stored in the garage.</p>
      <graph xmax="$dimmax2" ymax="$dimmax2" xmin="$dimmin2" ymin="$dimmin2">
<!--       <graph> -->
        <xlabel>$numOfBikes</xlabel>
        <ylabel>$numOfScooters</ylabel>
        $garageLine1
        $garageLine2
        $garagePoly
        <point name="garageTestSol" showCoordsWhenDragging="false">(0,0)
          <label>($garageTestSol.x, $garageTestSol.y)</label>
          <constraints>
            <constrainToGrid/>
          </constraints>
        </point>
      </graph>
      <answer name="chosenPoint2"><award><when>
        $garageTestSol=($bikeStored, $scooterStored)
      </when></award></answer>
    </li>

  </ol>
</section>
